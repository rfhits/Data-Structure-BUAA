# 【问题描述】
# 上节课有同学反应二叉树的题目输入太不人性化......所以这次修改了输入格式。
# 这道题只是练习建树，如果不会的话可以参考下面的提示。

# 【输入形式】
# 二叉树仍然用一行字符串表示，空格分隔，包含数字或"None"。依然按照层序排序，但是作为完全二叉树式的输入，每一层前面的None均不会省略。末尾连续的None可能被省略。

# 例如：

#        1
#     N     2
#    N N   3
# 上图所示的二叉树的输入格式为：1 None 2 None None 3，而非 1 None 2 3 None，第三层最前不存在的两个None没有被省略。



# 【输出形式】
# 输出二叉树的最左下方节点，即root.left.left.....left.val，如果不存在则输出None。


# 【样例输入】
# 1 None 2 None None 3

# 【样例输出】
# 1

# 【样例说明】
# 见上图，根节点（1）的左节点已经不存在，因此其本身即为所求。

# 【提示】
# 1. 对于完全二叉树式的输入列表中，编号为 i 的节点，其左右节点的编号也可以用 i 表示出来。推导这个关系式以找到节点 i 的左右节点。

# 2. 这个题目理论上不建树也可以，但是之后的题目可以复用这道题的建树流程。


# 我这个就是直接从i推导左右节点的

s = input().split()
i = 0
while(1):
    a = i*2+1
    if a >= len(s):
        break
    elif s[a] == "None":
        break
    else:
        i = a

print(s[i])
